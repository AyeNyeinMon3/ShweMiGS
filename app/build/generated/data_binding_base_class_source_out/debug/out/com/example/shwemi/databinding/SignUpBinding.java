// Generated by view binder compiler. Do not edit!
package com.example.shwemi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shwemi.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignUpBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guidelineLeft;

  @NonNull
  public final Guideline guidelineRight;

  @NonNull
  public final TextView haveAccountText;

  @NonNull
  public final TextView loginTextview;

  @NonNull
  public final ImageView logoImage;

  @NonNull
  public final TextInputLayout nameEdit;

  @NonNull
  public final ConstraintLayout passwordEdit;

  @NonNull
  public final Button signupButton;

  @NonNull
  public final TextInputLayout signupPasswordEdit;

  @NonNull
  public final TextInputLayout signupPhoneEdit;

  @NonNull
  public final TextInputLayout signupRetypePassword;

  @NonNull
  public final TextView signupText;

  private SignUpBinding(@NonNull ConstraintLayout rootView, @NonNull Guideline guidelineLeft,
      @NonNull Guideline guidelineRight, @NonNull TextView haveAccountText,
      @NonNull TextView loginTextview, @NonNull ImageView logoImage,
      @NonNull TextInputLayout nameEdit, @NonNull ConstraintLayout passwordEdit,
      @NonNull Button signupButton, @NonNull TextInputLayout signupPasswordEdit,
      @NonNull TextInputLayout signupPhoneEdit, @NonNull TextInputLayout signupRetypePassword,
      @NonNull TextView signupText) {
    this.rootView = rootView;
    this.guidelineLeft = guidelineLeft;
    this.guidelineRight = guidelineRight;
    this.haveAccountText = haveAccountText;
    this.loginTextview = loginTextview;
    this.logoImage = logoImage;
    this.nameEdit = nameEdit;
    this.passwordEdit = passwordEdit;
    this.signupButton = signupButton;
    this.signupPasswordEdit = signupPasswordEdit;
    this.signupPhoneEdit = signupPhoneEdit;
    this.signupRetypePassword = signupRetypePassword;
    this.signupText = signupText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignUpBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.sign_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline_left;
      Guideline guidelineLeft = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeft == null) {
        break missingId;
      }

      id = R.id.guideline_right;
      Guideline guidelineRight = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRight == null) {
        break missingId;
      }

      id = R.id.have_account_text;
      TextView haveAccountText = ViewBindings.findChildViewById(rootView, id);
      if (haveAccountText == null) {
        break missingId;
      }

      id = R.id.login_textview;
      TextView loginTextview = ViewBindings.findChildViewById(rootView, id);
      if (loginTextview == null) {
        break missingId;
      }

      id = R.id.logo_image;
      ImageView logoImage = ViewBindings.findChildViewById(rootView, id);
      if (logoImage == null) {
        break missingId;
      }

      id = R.id.name_edit;
      TextInputLayout nameEdit = ViewBindings.findChildViewById(rootView, id);
      if (nameEdit == null) {
        break missingId;
      }

      ConstraintLayout passwordEdit = (ConstraintLayout) rootView;

      id = R.id.signup_button;
      Button signupButton = ViewBindings.findChildViewById(rootView, id);
      if (signupButton == null) {
        break missingId;
      }

      id = R.id.signup_password_edit;
      TextInputLayout signupPasswordEdit = ViewBindings.findChildViewById(rootView, id);
      if (signupPasswordEdit == null) {
        break missingId;
      }

      id = R.id.signup_phone_edit;
      TextInputLayout signupPhoneEdit = ViewBindings.findChildViewById(rootView, id);
      if (signupPhoneEdit == null) {
        break missingId;
      }

      id = R.id.signup_retype_password;
      TextInputLayout signupRetypePassword = ViewBindings.findChildViewById(rootView, id);
      if (signupRetypePassword == null) {
        break missingId;
      }

      id = R.id.signup_text;
      TextView signupText = ViewBindings.findChildViewById(rootView, id);
      if (signupText == null) {
        break missingId;
      }

      return new SignUpBinding((ConstraintLayout) rootView, guidelineLeft, guidelineRight,
          haveAccountText, loginTextview, logoImage, nameEdit, passwordEdit, signupButton,
          signupPasswordEdit, signupPhoneEdit, signupRetypePassword, signupText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
