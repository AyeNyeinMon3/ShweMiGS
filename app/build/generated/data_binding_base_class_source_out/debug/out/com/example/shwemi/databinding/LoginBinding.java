// Generated by view binder compiler. Do not edit!
package com.example.shwemi.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shwemi.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView accountText;

  @NonNull
  public final TextView forgotText;

  @NonNull
  public final Guideline guidelineLeft;

  @NonNull
  public final Guideline guidelineRight;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final CheckBox loginCheckbox;

  @NonNull
  public final TextView loginText;

  @NonNull
  public final ImageView logoImage;

  @NonNull
  public final TextView newAccountText;

  @NonNull
  public final TextInputLayout passwordEdit;

  @NonNull
  public final TextInputLayout phoneEdit;

  private LoginBinding(@NonNull ConstraintLayout rootView, @NonNull TextView accountText,
      @NonNull TextView forgotText, @NonNull Guideline guidelineLeft,
      @NonNull Guideline guidelineRight, @NonNull Button loginButton,
      @NonNull CheckBox loginCheckbox, @NonNull TextView loginText, @NonNull ImageView logoImage,
      @NonNull TextView newAccountText, @NonNull TextInputLayout passwordEdit,
      @NonNull TextInputLayout phoneEdit) {
    this.rootView = rootView;
    this.accountText = accountText;
    this.forgotText = forgotText;
    this.guidelineLeft = guidelineLeft;
    this.guidelineRight = guidelineRight;
    this.loginButton = loginButton;
    this.loginCheckbox = loginCheckbox;
    this.loginText = loginText;
    this.logoImage = logoImage;
    this.newAccountText = newAccountText;
    this.passwordEdit = passwordEdit;
    this.phoneEdit = phoneEdit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.account_text;
      TextView accountText = ViewBindings.findChildViewById(rootView, id);
      if (accountText == null) {
        break missingId;
      }

      id = R.id.forgot_text;
      TextView forgotText = ViewBindings.findChildViewById(rootView, id);
      if (forgotText == null) {
        break missingId;
      }

      id = R.id.guideline_left;
      Guideline guidelineLeft = ViewBindings.findChildViewById(rootView, id);
      if (guidelineLeft == null) {
        break missingId;
      }

      id = R.id.guideline_right;
      Guideline guidelineRight = ViewBindings.findChildViewById(rootView, id);
      if (guidelineRight == null) {
        break missingId;
      }

      id = R.id.login_button;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.login_checkbox;
      CheckBox loginCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (loginCheckbox == null) {
        break missingId;
      }

      id = R.id.login_text;
      TextView loginText = ViewBindings.findChildViewById(rootView, id);
      if (loginText == null) {
        break missingId;
      }

      id = R.id.logo_image;
      ImageView logoImage = ViewBindings.findChildViewById(rootView, id);
      if (logoImage == null) {
        break missingId;
      }

      id = R.id.new_account_text;
      TextView newAccountText = ViewBindings.findChildViewById(rootView, id);
      if (newAccountText == null) {
        break missingId;
      }

      id = R.id.password_edit;
      TextInputLayout passwordEdit = ViewBindings.findChildViewById(rootView, id);
      if (passwordEdit == null) {
        break missingId;
      }

      id = R.id.phone_edit;
      TextInputLayout phoneEdit = ViewBindings.findChildViewById(rootView, id);
      if (phoneEdit == null) {
        break missingId;
      }

      return new LoginBinding((ConstraintLayout) rootView, accountText, forgotText, guidelineLeft,
          guidelineRight, loginButton, loginCheckbox, loginText, logoImage, newAccountText,
          passwordEdit, phoneEdit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
